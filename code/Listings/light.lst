C51 COMPILER V9.54   LIGHT                                                                 05/16/2023 21:55:56 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LIGHT
OBJECT MODULE PLACED IN .\Objects\light.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE light.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\light
                    -.lst) OBJECT(.\Objects\light.obj)

line level    source

   1          #include  <REG51.H>     
   2          #include  <math.h>    //Keil library  
   3          #include  <stdio.h>   //Keil library    
   4          #include  <INTRINS.H>
   5          #include "Delay.h"
   6          #include "LCD1602.h"
   7          
   8          #define   uchar unsigned char
   9          #define   uint unsigned int     
  10          //#define   DataPort P0  //LCD1602数据端口
  11          sbit      SCL=P1^0;      //IIC时钟引脚定义
  12          sbit      SDA=P1^1;      //IIC数据引脚定义
  13          //sbit      LCM_RS=P2^6;   //LCD1602命令端口            
  14          //sbit      LCM_RW=P2^5;   //LCD1602命令端口            
  15          //sbit      LCM_EN=P2^7;   //LCD1602命令端口 
  16          
  17          #define   SlaveAddress   0xB8 //定义器件在IIC总线中的从地址,根据ALT  ADDRESS地址引脚不同修改
  18                                        //ALT  ADDRESS引脚接地时地址为0x46，接电源时地址为0xB8
  19          typedef   unsigned char BYTE;
  20          typedef   unsigned short WORD;
  21          
  22          BYTE    BUF[8];                         //接收数据缓存区        
  23          uchar   ge,shi,bai,qian,wan;            //显示变量
  24          int     dis_data;                       //变量
  25          
  26          //void delay_nms(unsigned int k);
  27          //void InitLcd();
  28          void Init_BH1750(void);
  29          
  30          //void WriteDataLCM(uchar dataW);
  31          //void WriteCommandLCM(uchar CMD,uchar Attribc);
  32          //void DisplayOneChar(uchar X,uchar Y,uchar DData);
  33          void conversion(uint temp_data);
  34          
  35          void  Single_Write_BH1750(uchar REG_Address);               //单个写入数据
  36          uchar Single_Read_BH1750(uchar REG_Address);                //单个读取内部寄存器数据
  37          void  Multiple_Read_BH1750();                               //连续的读取内部寄存器数据
  38          //------------------------------------
  39          //void Delay5us();
  40          void Delay5ms();
  41          void BH1750_Start();                    //起始信号
  42          void BH1750_Stop();                     //停止信号
  43          void BH1750_SendACK(bit ack);           //应答ACK
  44          bit  BH1750_RecvACK();                  //读ack
  45          void BH1750_SendByte(BYTE dat);         //IIC单个字节写
  46          BYTE BH1750_RecvByte();                 //IIC单个字节读
  47          
  48          //-----------------------------------
  49          
  50          //*********************************************************
  51          void conversion(uint temp_data)  //  数据转换出 个，十，百，千，万
  52          {  
  53   1          wan=temp_data/10000+0x30 ;
  54   1          temp_data=temp_data%10000;   //取余运算
C51 COMPILER V9.54   LIGHT                                                                 05/16/2023 21:55:56 PAGE 2   

  55   1              qian=temp_data/1000+0x30 ;
  56   1          temp_data=temp_data%1000;    //取余运算
  57   1          bai=temp_data/100+0x30   ;
  58   1          temp_data=temp_data%100;     //取余运算
  59   1          shi=temp_data/10+0x30    ;
  60   1          temp_data=temp_data%10;      //取余运算
  61   1          ge=temp_data+0x30;  
  62   1      }
  63          
  64          //毫秒延时**************************
  65          //void delay_nms(unsigned int k)        
  66          //{                                             
  67          //unsigned int i,j;                             
  68          //for(i=0;i<k;i++)
  69          //{                     
  70          //for(j=0;j<121;j++)                    
  71          //{;}}                                          
  72          //}
  73          
  74          /*******************************/
  75          //void WaitForEnable(void)      
  76          //{                                     
  77          //DataPort=0xff;                
  78          //LCM_RS=0;LCM_RW=1;_nop_();
  79          //LCM_EN=1;_nop_();_nop_();
  80          //while(DataPort&0x80); 
  81          //LCM_EN=0;                             
  82          //}                                     
  83          ///*******************************/
  84          //void WriteCommandLCM(uchar CMD,uchar Attribc)
  85          //{                                     
  86          //if(Attribc)WaitForEnable();   
  87          //LCM_RS=0;LCM_RW=0;_nop_();
  88          //DataPort=CMD;_nop_(); 
  89          //LCM_EN=1;_nop_();_nop_();LCM_EN=0;
  90          //}                                     
  91          ///*******************************/
  92          //void WriteDataLCM(uchar dataW)
  93          //{                                     
  94          //WaitForEnable();              
  95          //LCM_RS=1;LCM_RW=0;_nop_();
  96          //DataPort=dataW;_nop_();       
  97          //LCM_EN=1;_nop_();_nop_();LCM_EN=0;
  98          //}             
  99          /***********************************/
 100          //void InitLcd()                                
 101          //{                     
 102          //WriteCommandLCM(0x38,1);      
 103          //WriteCommandLCM(0x08,1);      
 104          //WriteCommandLCM(0x01,1);      
 105          //WriteCommandLCM(0x06,1);      
 106          //WriteCommandLCM(0x0c,1);
 107          //}                     
 108          /***********************************/
 109          //void DisplayOneChar(uchar X,uchar Y,uchar DData)
 110          //{                                             
 111          //Y&=1;                                         
 112          //X&=15;                                                
 113          //if(Y)X|=0x40;                                 
 114          //X|=0x80;                      
 115          //WriteCommandLCM(X,0);         
 116          //WriteDataLCM(DData);          
C51 COMPILER V9.54   LIGHT                                                                 05/16/2023 21:55:56 PAGE 3   

 117          //}                                             
 118          
 119          /**************************************
 120          延时5微秒(STC90C52RC@12M)
 121          不同的工作环境,需要调整此函数，注意时钟过快时需要修改
 122          当改用1T的MCU时,请调整此延时函数
 123          **************************************/
 124          //void Delay5us()
 125          //{
 126          //    _nop_();_nop_();_nop_();_nop_();
 127          //    _nop_();_nop_();_nop_();_nop_();
 128          //      _nop_();_nop_();_nop_();_nop_();
 129          //      _nop_();_nop_();_nop_();_nop_();
 130          //}
 131          
 132          /**************************************
 133          延时5毫秒(STC90C52RC@12M)
 134          不同的工作环境,需要调整此函数
 135          当改用1T的MCU时,请调整此延时函数
 136          **************************************/
 137          //void Delay5ms()
 138          //{
 139          //    WORD n = 560;
 140          
 141          //    while (n--);
 142          //}
 143          
 144          /**************************************
 145          起始信号
 146          **************************************/
 147          void BH1750_Start()
 148          {
 149   1          SDA = 1;                    //拉高数据线
 150   1          SCL = 1;                    //拉高时钟线
 151   1          Delay5us();                 //延时
 152   1          SDA = 0;                    //产生下降沿
 153   1          Delay5us();                 //延时
 154   1          SCL = 0;                    //拉低时钟线
 155   1      }
 156          
 157          /**************************************
 158          停止信号
 159          **************************************/
 160          void BH1750_Stop()
 161          {
 162   1          SDA = 0;                    //拉低数据线
 163   1          SCL = 1;                    //拉高时钟线
 164   1          Delay5us();                 //延时
 165   1          SDA = 1;                    //产生上升沿
 166   1          Delay5us();                 //延时
 167   1      }
 168          
 169          /**************************************
 170          发送应答信号
 171          入口参数:ack (0:ACK 1:NAK)
 172          **************************************/
 173          void BH1750_SendACK(bit ack)
 174          {
 175   1          SDA = ack;                  //写应答信号
 176   1          SCL = 1;                    //拉高时钟线
 177   1          Delay5us();                 //延时
 178   1          SCL = 0;                    //拉低时钟线
C51 COMPILER V9.54   LIGHT                                                                 05/16/2023 21:55:56 PAGE 4   

 179   1          Delay5us();                 //延时
 180   1      }
 181          
 182          /**************************************
 183          接收应答信号
 184          **************************************/
 185          bit BH1750_RecvACK()
 186          {
 187   1          SCL = 1;                    //拉高时钟线
 188   1          Delay5us();                 //延时
 189   1          CY = SDA;                   //读应答信号
 190   1          SCL = 0;                    //拉低时钟线
 191   1          Delay5us();                 //延时
 192   1      
 193   1          return CY;
 194   1      }
 195          
 196          /**************************************
 197          向IIC总线发送一个字节数据
 198          **************************************/
 199          void BH1750_SendByte(BYTE dat)
 200          {
 201   1          BYTE i;
 202   1      
 203   1          for (i=0; i<8; i++)         //8位计数器
 204   1          {
 205   2              dat <<= 1;              //移出数据的最高位
 206   2              SDA = CY;               //送数据口
 207   2              SCL = 1;                //拉高时钟线
 208   2              Delay5us();             //延时
 209   2              SCL = 0;                //拉低时钟线
 210   2              Delay5us();             //延时
 211   2          }
 212   1          BH1750_RecvACK();
 213   1      }
 214          
 215          /**************************************
 216          从IIC总线接收一个字节数据
 217          **************************************/
 218          BYTE BH1750_RecvByte()
 219          {
 220   1          BYTE i;
 221   1          BYTE dat = 0;
 222   1      
 223   1          SDA = 1;                    //使能内部上拉,准备读取数据,
 224   1          for (i=0; i<8; i++)         //8位计数器
 225   1          {
 226   2              dat <<= 1;
 227   2              SCL = 1;                //拉高时钟线
 228   2              Delay5us();             //延时
 229   2              dat |= SDA;             //读数据               
 230   2              SCL = 0;                //拉低时钟线
 231   2              Delay5us();             //延时
 232   2          }
 233   1          return dat;
 234   1      }
 235          
 236          //*********************************
 237          
 238          void Single_Write_BH1750(uchar REG_Address)
 239          {
 240   1          BH1750_Start();                  //起始信号
C51 COMPILER V9.54   LIGHT                                                                 05/16/2023 21:55:56 PAGE 5   

 241   1          BH1750_SendByte(SlaveAddress);   //发送设备地址+写信号
 242   1          BH1750_SendByte(REG_Address);    //内部寄存器地址，
 243   1        //  BH1750_SendByte(REG_data);       //内部寄存器数据，
 244   1          BH1750_Stop();                   //发送停止信号
 245   1      }
 246          
 247          //********单字节读取*****************************************
 248          /*
 249          uchar Single_Read_BH1750(uchar REG_Address)
 250          {  uchar REG_data;
 251              BH1750_Start();                          //起始信号
 252              BH1750_SendByte(SlaveAddress);           //发送设备地址+写信号
 253              BH1750_SendByte(REG_Address);                   //发送存储单元地址，从0开始 
 254              BH1750_Start();                          //起始信号
 255              BH1750_SendByte(SlaveAddress+1);         //发送设备地址+读信号
 256              REG_data=BH1750_RecvByte();              //读出寄存器数据
 257                  BH1750_SendACK(1);   
 258                  BH1750_Stop();                           //停止信号
 259              return REG_data; 
 260          }
 261          */
 262          //*********************************************************
 263          //
 264          //连续读出BH1750内部数据
 265          //
 266          //*********************************************************
 267          void Multiple_read_BH1750(void)
 268          {   uchar i;    
 269   1          BH1750_Start();                          //起始信号
 270   1          BH1750_SendByte(SlaveAddress+1);         //发送设备地址+读信号
 271   1              
 272   1               for (i=0; i<3; i++)                      //连续读取2个地址数据，存储中BUF
 273   1          {
 274   2              BUF[i] = BH1750_RecvByte();          //BUF[0]存储0x32地址中的数据
 275   2              if (i == 3)
 276   2              {
 277   3      
 278   3                 BH1750_SendACK(1);                //最后一个数据需要回NOACK
 279   3              }
 280   2              else
 281   2              {               
 282   3                BH1750_SendACK(0);                //回应ACK
 283   3             }
 284   2         }
 285   1      
 286   1          BH1750_Stop();                          //停止信号
 287   1          Delay(5);
 288   1      }
 289          
 290          
 291          //初始化BH1750，根据需要请参考pdf进行修改****
 292          void Init_BH1750()
 293          {
 294   1         Single_Write_BH1750(0x01);  
 295   1      
 296   1      }
 297          //*********************************************************
 298          //主程序********
 299          //*********************************************************
 300          //void main()
 301          //{  
 302          //   float temp;
C51 COMPILER V9.54   LIGHT                                                                 05/16/2023 21:55:56 PAGE 6   

 303          //   delay_nms(100);        //延时100ms 
 304          //   InitLcd();           //初始化LCD
 305          //   Init_BH1750();       //初始化BH1750
 306          // 
 307          //  while(1)              //循环
 308          //  { 
 309          
 310          //    Single_Write_BH1750(0x01);   // power on
 311          //    Single_Write_BH1750(0x10);   // H- resolution mode
 312          //    delay_nms(180);              //延时180ms
 313          //    Multiple_Read_BH1750();       //连续读出数据，存储在BUF中
 314          //    dis_data=BUF[0];
 315          //    dis_data=(dis_data<<8)+BUF[1];//合成数据，即光照数据    
 316          //    temp=(float)dis_data/1.2;
 317          
 318          ////    conversion(temp);         //计算数据和显示
 319          ////    DisplayOneChar(0,0,'L'); 
 320          ////    DisplayOneChar(1,0,'i'); 
 321          ////    DisplayOneChar(2,0,'g'); 
 322          ////    DisplayOneChar(3,0,'h'); 
 323          ////    DisplayOneChar(4,0,'t'); 
 324          ////    DisplayOneChar(5,0,':'); 
 325          
 326          ////    DisplayOneChar(7,0,wan); //显示数据
 327          ////    DisplayOneChar(8,0,qian);  
 328          ////    DisplayOneChar(9,0,bai); 
 329          ////    DisplayOneChar(10,0,shi); 
 330          ////    DisplayOneChar(11,0,ge); 
 331          
 332          //      DisplayOneChar(13,0,'l'); ////显示数单位
 333          //      DisplayOneChar(14,0,'x');  
 334          //            
 335          //  }
 336          //} 
 337          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    333    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
